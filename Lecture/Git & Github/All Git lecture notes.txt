* Introduction to version control system *

	Version Control System
To evolve software and and inprove the functionality we step by step add more code and when we have significant change to rollout we release a new version of the software.

Features of version system: 
i) it helps to manage release of new version
ii) it helps to manage rollback to old version
iii) it helps to manage who wrote which piece of code
iv) it help to maintain version/snapshots that can be later refferd

Git is free and open source version control system and it is very stable.

* Intro to Git *

GIT-VCS
Features of GIT
-Open source VCS
-Pretty fast and reliable
-Industry Standard
-Distributed in nature

* Need for VCS *

Need and advantages we get by using GIT
-Historical changes tracking
-Backup and disaster recovery
-Code reviews and quality assurance
-Experimentaion and rollback
-Conflict resolution
-Open Source
-Release management

* Why to use Git *

To enable git in project : 
	git init  -> it will enable tracking 
	git init will create a .git hidden folder
	if we delete the .git folder then we will loss all the previous commits

git status -> this commond tells you the current state of project

Stage of project: i)Working directory -> ii) Staging area -> iii)Repository
Working directory is also called working tree

When we will create a new file then it will goes to working directory   
Untracked file: files under working directory


To bring you file to staging area from working directory we use git add fileName commond
When your file come to staging area then git will start tracking 
If something is in the staging area it will be probably be the part of the next version/commit
 
We use git commit commond to bring the version to repository from staging area
And we have to also add commit message
Repository: the place where all the versions are saved

git log commond gives us the log of all commit

	* What is github * 

Working directory ->Staging area ->Local Repository ->Remote Repository 


	* Making New Repo on Github *

To use git remote repository we use commond
git remote add  origint https://github.com/saketsaurab/Git_Sample.git

git push  origin main  -> after this commond the code will be uploaded to github


	*  Git pull & git issues *
We can write the code directly on github and we can also add the commit message
But this version will not be updated to our local host machine so we will use 
git pull origin main  command to fetch the latest version update


	*  Git hashes and blobs *
How Git internally works?
Git internally heavily depends on hashing and tree like data structures
When we use commond git add then it connverts our code to 40 character hash object 
All the chages comes to blob
BLOB: Binary large object

git cat-file -p / file name.....-> this commond is used to see the file content

git cat-file -t /file name..... -> this commond tells about the type of file




